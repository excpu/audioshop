{"version":3,"file":"626.bundle.js","mappings":"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","sources":["webpack://audioshop/./node_modules/music-metadata/lib/asf/GUID.js","webpack://audioshop/./node_modules/music-metadata/lib/asf/AsfUtil.js","webpack://audioshop/./node_modules/music-metadata/lib/asf/AsfObject.js","webpack://audioshop/./node_modules/music-metadata/lib/asf/AsfParser.js"],"sourcesContent":["import { hexToUint8Array, uint8ArrayToHex } from 'uint8array-extras';\n/**\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01, Appendix A: ASF GUIDs\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n *\n * ASF File Structure:\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n *\n * ASF GUIDs:\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - https://github.com/dji-sdk/FFmpeg/blob/master/libavformat/asf.c\n */\nclass GUID {\n    static fromBin(bin, offset = 0) {\n        return new GUID(GUID.decode(bin, offset));\n    }\n    /**\n     * Decode GUID in format like \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @param objectId Binary GUID\n     * @param offset Read offset in bytes, default 0\n     * @returns GUID as dashed hexadecimal representation\n     */\n    static decode(objectId, offset = 0) {\n        const view = new DataView(objectId.buffer, offset);\n        const guid = `${view.getUint32(0, true).toString(16)}-${view.getUint16(4, true).toString(16)}-${view.getUint16(6, true).toString(16)}-${view.getUint16(8).toString(16)}-${uint8ArrayToHex(objectId.slice(offset + 10, offset + 16))}`;\n        return guid.toUpperCase();\n    }\n    /**\n     * Decode stream type\n     * @param mediaType Media type GUID\n     * @returns Media type\n     */\n    static decodeMediaType(mediaType) {\n        switch (mediaType.str) {\n            case GUID.AudioMedia.str: return 'audio';\n            case GUID.VideoMedia.str: return 'video';\n            case GUID.CommandMedia.str: return 'command';\n            case GUID.Degradable_JPEG_Media.str: return 'degradable-jpeg';\n            case GUID.FileTransferMedia.str: return 'file-transfer';\n            case GUID.BinaryMedia.str: return 'binary';\n        }\n    }\n    /**\n     * Encode GUID\n     * @param guid GUID like: \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @returns Encoded Binary GUID\n     */\n    static encode(str) {\n        const bin = new Uint8Array(16);\n        const view = new DataView(bin.buffer);\n        view.setUint32(0, Number.parseInt(str.slice(0, 8), 16), true);\n        view.setUint16(4, Number.parseInt(str.slice(9, 13), 16), true);\n        view.setUint16(6, Number.parseInt(str.slice(14, 18), 16), true);\n        bin.set(hexToUint8Array(str.slice(19, 23)), 8);\n        bin.set(hexToUint8Array(str.slice(24)), 10);\n        return bin;\n    }\n    constructor(str) {\n        this.str = str;\n    }\n    equals(guid) {\n        return this.str === guid.str;\n    }\n    toBin() {\n        return GUID.encode(this.str);\n    }\n}\n// 10.1 Top-level ASF object GUIDs\nGUID.HeaderObject = new GUID(\"75B22630-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.DataObject = new GUID(\"75B22636-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.SimpleIndexObject = new GUID(\"33000890-E5B1-11CF-89F4-00A0C90349CB\");\nGUID.IndexObject = new GUID(\"D6E229D3-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexObject = new GUID(\"FEB103F8-12AD-4C64-840F-2A1D2F7AD48C\");\nGUID.TimecodeIndexObject = new GUID(\"3CB73FD0-0C4A-4803-953D-EDF7B6228F0C\");\n// 10.2 Header Object GUIDs\nGUID.FilePropertiesObject = new GUID(\"8CABDCA1-A947-11CF-8EE4-00C00C205365\");\nGUID.StreamPropertiesObject = new GUID(\"B7DC0791-A9B7-11CF-8EE6-00C00C205365\");\nGUID.HeaderExtensionObject = new GUID(\"5FBF03B5-A92E-11CF-8EE3-00C00C205365\");\nGUID.CodecListObject = new GUID(\"86D15240-311D-11D0-A3A4-00A0C90348F6\");\nGUID.ScriptCommandObject = new GUID(\"1EFB1A30-0B62-11D0-A39B-00A0C90348F6\");\nGUID.MarkerObject = new GUID(\"F487CD01-A951-11CF-8EE6-00C00C205365\");\nGUID.BitrateMutualExclusionObject = new GUID(\"D6E229DC-35DA-11D1-9034-00A0C90349BE\");\nGUID.ErrorCorrectionObject = new GUID(\"75B22635-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ContentDescriptionObject = new GUID(\"75B22633-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ExtendedContentDescriptionObject = new GUID(\"D2D0A440-E307-11D2-97F0-00A0C95EA850\");\nGUID.ContentBrandingObject = new GUID(\"2211B3FA-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.StreamBitratePropertiesObject = new GUID(\"7BF875CE-468D-11D1-8D82-006097C9A2B2\");\nGUID.ContentEncryptionObject = new GUID(\"2211B3FB-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.ExtendedContentEncryptionObject = new GUID(\"298AE614-2622-4C17-B935-DAE07EE9289C\");\nGUID.DigitalSignatureObject = new GUID(\"2211B3FC-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.PaddingObject = new GUID(\"1806D474-CADF-4509-A4BA-9AABCB96AAE8\");\n// 10.3 Header Extension Object GUIDs\nGUID.ExtendedStreamPropertiesObject = new GUID(\"14E6A5CB-C672-4332-8399-A96952065B5A\");\nGUID.AdvancedMutualExclusionObject = new GUID(\"A08649CF-4775-4670-8A16-6E35357566CD\");\nGUID.GroupMutualExclusionObject = new GUID(\"D1465A40-5A79-4338-B71B-E36B8FD6C249\");\nGUID.StreamPrioritizationObject = new GUID(\"D4FED15B-88D3-454F-81F0-ED5C45999E24\");\nGUID.BandwidthSharingObject = new GUID(\"A69609E6-517B-11D2-B6AF-00C04FD908E9\");\nGUID.LanguageListObject = new GUID(\"7C4346A9-EFE0-4BFC-B229-393EDE415C85\");\nGUID.MetadataObject = new GUID(\"C5F8CBEA-5BAF-4877-8467-AA8C44FA4CCA\");\nGUID.MetadataLibraryObject = new GUID(\"44231C94-9498-49D1-A141-1D134E457054\");\nGUID.IndexParametersObject = new GUID(\"D6E229DF-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexParametersObject = new GUID(\"6B203BAD-3F11-48E4-ACA8-D7613DE2CFA7\");\nGUID.TimecodeIndexParametersObject = new GUID(\"F55E496D-9797-4B5D-8C8B-604DFE9BFB24\");\nGUID.CompatibilityObject = new GUID(\"26F18B5D-4584-47EC-9F5F-0E651F0452C9\");\nGUID.AdvancedContentEncryptionObject = new GUID(\"43058533-6981-49E6-9B74-AD12CB86D58C\");\n// 10.4 Stream Properties Object Stream Type GUIDs\nGUID.AudioMedia = new GUID(\"F8699E40-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.VideoMedia = new GUID(\"BC19EFC0-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.CommandMedia = new GUID(\"59DACFC0-59E6-11D0-A3AC-00A0C90348F6\");\nGUID.JFIF_Media = new GUID(\"B61BE100-5B4E-11CF-A8FD-00805F5C442B\");\nGUID.Degradable_JPEG_Media = new GUID(\"35907DE0-E415-11CF-A917-00805F5C442B\");\nGUID.FileTransferMedia = new GUID(\"91BD222C-F21C-497A-8B6D-5AA86BFC0185\");\nGUID.BinaryMedia = new GUID(\"3AFB65E2-47EF-40F2-AC2C-70A90D71D343\");\nGUID.ASF_Index_Placeholder_Object = new GUID(\"D9AADE20-7C17-4F9C-BC28-8555DD98E2A2\");\nexport default GUID;\n//# sourceMappingURL=GUID.js.map","import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nexport function getParserForAttr(i) {\n    return attributeParsers[i];\n}\nexport function parseUnicodeAttr(uint8Array) {\n    return util.stripNulls(util.decodeString(uint8Array, 'utf-16le'));\n}\nconst attributeParsers = [\n    parseUnicodeAttr,\n    parseByteArrayAttr,\n    parseBoolAttr,\n    parseDWordAttr,\n    parseQWordAttr,\n    parseWordAttr,\n    parseByteArrayAttr\n];\nfunction parseByteArrayAttr(buf) {\n    return new Uint8Array(buf);\n}\nfunction parseBoolAttr(buf, offset = 0) {\n    return parseWordAttr(buf, offset) === 1;\n}\nfunction parseDWordAttr(buf, offset = 0) {\n    return Token.UINT32_LE.get(buf, offset);\n}\nfunction parseQWordAttr(buf, offset = 0) {\n    return Token.UINT64_LE.get(buf, offset);\n}\nfunction parseWordAttr(buf, offset = 0) {\n    return Token.UINT16_LE.get(buf, offset);\n}\n//# sourceMappingURL=AsfUtil.js.map","// ASF Objects\nimport * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nimport GUID from './GUID.js';\nimport { getParserForAttr, parseUnicodeAttr } from './AsfUtil.js';\nimport { AttachedPictureType } from '../id3v2/ID3v2Token.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nexport class AsfContentParseError extends makeUnexpectedFileContentError('ASF') {\n}\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\nexport var DataType;\n(function (DataType) {\n    /**\n     * Unicode string. The data consists of a sequence of Unicode characters.\n     */\n    DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\n    /**\n     * BYTE array. The type of data is implementation-specific.\n     */\n    DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\n    /**\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n     */\n    DataType[DataType[\"Bool\"] = 2] = \"Bool\";\n    /**\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n     */\n    DataType[DataType[\"DWord\"] = 3] = \"DWord\";\n    /**\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n     */\n    DataType[DataType[\"QWord\"] = 4] = \"QWord\";\n    /**\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n     */\n    DataType[DataType[\"Word\"] = 5] = \"Word\";\n})(DataType || (DataType = {}));\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\nexport const TopLevelHeaderObjectToken = {\n    len: 30,\n    get: (buf, off) => {\n        return {\n            objectId: GUID.fromBin(buf, off),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16)),\n            numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\n            // Reserved: 2 bytes\n        };\n    }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\nexport const HeaderObjectToken = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            objectId: GUID.fromBin(buf, off),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16))\n        };\n    }\n};\nexport class State {\n    constructor(header) {\n        this.len = Number(header.objectSize) - HeaderObjectToken.len;\n    }\n    postProcessTag(tags, name, valueType, data) {\n        if (name === 'WM/Picture') {\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\n        }\n        else {\n            const parseAttr = getParserForAttr(valueType);\n            if (!parseAttr) {\n                throw new AsfContentParseError(`unexpected value headerType: ${valueType}`);\n            }\n            tags.push({ id: name, value: parseAttr(data) });\n        }\n    }\n}\n// ToDo: use ignore type\nexport class IgnoreObjectState extends State {\n    get(buf, off) {\n        return null;\n    }\n}\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\nexport class FilePropertiesObject extends State {\n    get(buf, off) {\n        return {\n            fileId: GUID.fromBin(buf, off),\n            fileSize: Token.UINT64_LE.get(buf, off + 16),\n            creationDate: Token.UINT64_LE.get(buf, off + 24),\n            dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n            playDuration: Token.UINT64_LE.get(buf, off + 40),\n            sendDuration: Token.UINT64_LE.get(buf, off + 48),\n            preroll: Token.UINT64_LE.get(buf, off + 56),\n            flags: {\n                broadcast: util.getBit(buf, off + 64, 24),\n                seekable: util.getBit(buf, off + 64, 25)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n            maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n            maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n        };\n    }\n}\nFilePropertiesObject.guid = GUID.FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\nexport class StreamPropertiesObject extends State {\n    get(buf, off) {\n        return {\n            streamType: GUID.decodeMediaType(GUID.fromBin(buf, off)),\n            errorCorrectionType: GUID.fromBin(buf, off + 8)\n            // ToDo\n        };\n    }\n}\nStreamPropertiesObject.guid = GUID.StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\nexport class HeaderExtensionObject {\n    constructor() {\n        this.len = 22;\n    }\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            reserved1: GUID.fromBin(buf, off),\n            reserved2: view.getUint16(16, true),\n            extensionDataSize: view.getUint16(18, true)\n        };\n    }\n}\nHeaderExtensionObject.guid = GUID.HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nconst CodecListObjectHeader = {\n    len: 20,\n    get: (buf, off) => {\n        const view = new DataView(buf.buffer, off);\n        return {\n            entryCount: view.getUint16(16, true)\n        };\n    }\n};\nasync function readString(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf-16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nexport async function readCodecEntries(tokenizer) {\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n    const entries = [];\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\n        entries.push(await readCodecEntry(tokenizer));\n    }\n    return entries;\n}\nasync function readInformation(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    const buf = new Uint8Array(length);\n    await tokenizer.readBuffer(buf);\n    return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\nasync function readCodecEntry(tokenizer) {\n    const type = await tokenizer.readNumber(Token.UINT16_LE);\n    return {\n        type: {\n            videoCodec: (type & 0x0001) === 0x0001,\n            audioCodec: (type & 0x0002) === 0x0002\n        },\n        codecName: await readString(tokenizer),\n        description: await readString(tokenizer),\n        information: await readInformation(tokenizer)\n    };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\nexport class ContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        let pos = 10;\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n            const length = view.getUint16(i * 2, true);\n            if (length > 0) {\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\n                const end = pos + length;\n                tags.push({ id: tagName, value: parseUnicodeAttr(buf.slice(off + pos, off + end)) });\n                pos = end;\n            }\n        }\n        return tags;\n    }\n}\nContentDescriptionObjectState.guid = GUID.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\nexport class ExtendedContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        const attrCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < attrCount; i += 1) {\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const name = parseUnicodeAttr(buf.slice(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const valueType = view.getUint16(pos, true);\n            pos += 2;\n            const valueLen = view.getUint16(pos, true);\n            pos += 2;\n            const value = buf.slice(off + pos, off + pos + valueLen);\n            pos += valueLen;\n            this.postProcessTag(tags, name, valueType, value);\n        }\n        return tags;\n    }\n}\nExtendedContentDescriptionObjectState.guid = GUID.ExtendedContentDescriptionObject;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\nexport class ExtendedStreamPropertiesObjectState extends State {\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            startTime: Token.UINT64_LE.get(buf, off),\n            endTime: Token.UINT64_LE.get(buf, off + 8),\n            dataBitrate: view.getInt32(12, true),\n            bufferSize: view.getInt32(16, true),\n            initialBufferFullness: view.getInt32(20, true),\n            alternateDataBitrate: view.getInt32(24, true),\n            alternateBufferSize: view.getInt32(28, true),\n            alternateInitialBufferFullness: view.getInt32(32, true),\n            maximumObjectSize: view.getInt32(36, true),\n            flags: {\n                reliableFlag: util.getBit(buf, off + 40, 0),\n                seekableFlag: util.getBit(buf, off + 40, 1),\n                resendLiveCleanpointsFlag: util.getBit(buf, off + 40, 2)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            streamNumber: view.getInt16(42, true),\n            streamLanguageId: view.getInt16(44, true),\n            averageTimePerFrame: view.getInt32(52, true),\n            streamNameCount: view.getInt32(54, true),\n            payloadExtensionSystems: view.getInt32(56, true),\n            streamNames: [], // ToDo\n            streamPropertiesObject: null\n        };\n    }\n}\nExtendedStreamPropertiesObjectState.guid = GUID.ExtendedStreamPropertiesObject;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\nexport class MetadataObjectState extends State {\n    get(uint8Array, off) {\n        const tags = [];\n        const view = new DataView(uint8Array.buffer, off);\n        const descriptionRecordsCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\n            pos += 4;\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const dataType = view.getUint16(pos, true);\n            pos += 2;\n            const dataLen = view.getUint32(pos, true);\n            pos += 4;\n            const name = parseUnicodeAttr(uint8Array.slice(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const data = uint8Array.slice(off + pos, off + pos + dataLen);\n            pos += dataLen;\n            this.postProcessTag(tags, name, dataType, data);\n        }\n        return tags;\n    }\n}\nMetadataObjectState.guid = GUID.MetadataObject;\n// 4.8\tMetadata Library Object (optional, 0 or 1)\nexport class MetadataLibraryObjectState extends MetadataObjectState {\n}\nMetadataLibraryObjectState.guid = GUID.MetadataLibraryObject;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\nexport class WmPictureToken {\n    static fromBuffer(buffer) {\n        const pic = new WmPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const view = new DataView(buffer.buffer, offset);\n        const typeId = view.getUint8(0);\n        const size = view.getInt32(1, true);\n        let index = 5;\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const format = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const description = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        return {\n            type: AttachedPictureType[typeId],\n            format,\n            description,\n            size,\n            data: buffer.slice(index + 4)\n        };\n    }\n}\n//# sourceMappingURL=AsfObject.js.map","import initDebug from 'debug';\nimport { TrackType } from '../type.js';\nimport GUID from './GUID.js';\nimport * as AsfObject from './AsfObject.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { AsfContentParseError } from './AsfObject.js';\nconst debug = initDebug('music-metadata:parser:ASF');\nconst headerType = 'asf';\n/**\n * Windows Media Metadata Usage Guidelines\n * - Ref: https://msdn.microsoft.com/en-us/library/ms867702.aspx\n *\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01\n * - https://hwiegman.home.xs4all.nl/fileformats/asf/ASF_Specification.pdf\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n */\nexport class AsfParser extends BasicParser {\n    async parse() {\n        const header = await this.tokenizer.readToken(AsfObject.TopLevelHeaderObjectToken);\n        if (!header.objectId.equals(GUID.HeaderObject)) {\n            throw new AsfContentParseError(`expected asf header; but was not found; got: ${header.objectId.str}`);\n        }\n        try {\n            await this.parseObjectHeader(header.numberOfHeaderObjects);\n        }\n        catch (err) {\n            debug('Error while parsing ASF: %s', err);\n        }\n    }\n    async parseObjectHeader(numberOfObjectHeaders) {\n        let tags;\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\n            // Parse data part of the ASF Object\n            debug('header GUID=%s', header.objectId.str);\n            switch (header.objectId.str) {\n                case AsfObject.FilePropertiesObject.guid.str: { // 3.2\n                    const fpo = await this.tokenizer.readToken(new AsfObject.FilePropertiesObject(header));\n                    this.metadata.setFormat('duration', Number(fpo.playDuration / BigInt(1000)) / 10000 - Number(fpo.preroll) / 1000);\n                    this.metadata.setFormat('bitrate', fpo.maximumBitrate);\n                    break;\n                }\n                case AsfObject.StreamPropertiesObject.guid.str: { // 3.3\n                    const spo = await this.tokenizer.readToken(new AsfObject.StreamPropertiesObject(header));\n                    this.metadata.setFormat('container', `ASF/${spo.streamType}`);\n                    break;\n                }\n                case AsfObject.HeaderExtensionObject.guid.str: { // 3.4\n                    const extHeader = await this.tokenizer.readToken(new AsfObject.HeaderExtensionObject());\n                    await this.parseExtensionObject(extHeader.extensionDataSize);\n                    break;\n                }\n                case AsfObject.ContentDescriptionObjectState.guid.str: // 3.10\n                    tags = await this.tokenizer.readToken(new AsfObject.ContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case AsfObject.ExtendedContentDescriptionObjectState.guid.str: // 3.11\n                    tags = await this.tokenizer.readToken(new AsfObject.ExtendedContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case GUID.CodecListObject.str: {\n                    const codecs = await AsfObject.readCodecEntries(this.tokenizer);\n                    codecs.forEach(codec => {\n                        this.metadata.addStreamInfo({\n                            type: codec.type.videoCodec ? TrackType.video : TrackType.audio,\n                            codecName: codec.codecName\n                        });\n                    });\n                    const audioCodecs = codecs.filter(codec => codec.type.audioCodec).map(codec => codec.codecName).join('/');\n                    this.metadata.setFormat('codec', audioCodecs);\n                    break;\n                }\n                case GUID.StreamBitratePropertiesObject.str:\n                    // ToDo?\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n                    break;\n                case GUID.PaddingObject.str:\n                    // ToDo: register bytes pad\n                    debug('Padding: %s bytes', header.objectSize - AsfObject.HeaderObjectToken.len);\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    debug('Ignore ASF-Object-GUID: %s', header.objectId.str);\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\n            }\n        } while (--numberOfObjectHeaders);\n        // done\n    }\n    async addTags(tags) {\n        await Promise.all(tags.map(({ id, value }) => this.metadata.addTag(headerType, id, value)));\n    }\n    async parseExtensionObject(extensionSize) {\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\n            const remaining = header.objectSize - AsfObject.HeaderObjectToken.len;\n            // Parse data part of the ASF Object\n            switch (header.objectId.str) {\n                case AsfObject.ExtendedStreamPropertiesObjectState.guid.str: // 4.1\n                    // ToDo: extended stream header properties are ignored\n                    await this.tokenizer.readToken(new AsfObject.ExtendedStreamPropertiesObjectState(header));\n                    break;\n                case AsfObject.MetadataObjectState.guid.str: { // 4.7\n                    const moTags = await this.tokenizer.readToken(new AsfObject.MetadataObjectState(header));\n                    await this.addTags(moTags);\n                    break;\n                }\n                case AsfObject.MetadataLibraryObjectState.guid.str: { // 4.8\n                    const mlTags = await this.tokenizer.readToken(new AsfObject.MetadataLibraryObjectState(header));\n                    await this.addTags(mlTags);\n                    break;\n                }\n                case GUID.PaddingObject.str:\n                    // ToDo: register bytes pad\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                case GUID.CompatibilityObject.str:\n                    this.tokenizer.ignore(remaining);\n                    break;\n                case GUID.ASF_Index_Placeholder_Object.str:\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    // console.log(\"Ignore ASF-Object-GUID: %s\", header.objectId.str);\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\n                    break;\n            }\n            extensionSize -= header.objectSize;\n        } while (extensionSize > 0);\n    }\n}\n//# sourceMappingURL=AsfParser.js.map"],"names":["GUID","fromBin","bin","offset","decode","objectId","view","DataView","buffer","getUint32","toString","getUint16","slice","toUpperCase","decodeMediaType","mediaType","str","AudioMedia","VideoMedia","CommandMedia","Degradable_JPEG_Media","FileTransferMedia","BinaryMedia","encode","Uint8Array","setUint32","Number","parseInt","setUint16","set","constructor","this","equals","guid","toBin","HeaderObject","DataObject","SimpleIndexObject","IndexObject","MediaObjectIndexObject","TimecodeIndexObject","FilePropertiesObject","StreamPropertiesObject","HeaderExtensionObject","CodecListObject","ScriptCommandObject","MarkerObject","BitrateMutualExclusionObject","ErrorCorrectionObject","ContentDescriptionObject","ExtendedContentDescriptionObject","ContentBrandingObject","StreamBitratePropertiesObject","ContentEncryptionObject","ExtendedContentEncryptionObject","DigitalSignatureObject","PaddingObject","ExtendedStreamPropertiesObject","AdvancedMutualExclusionObject","GroupMutualExclusionObject","StreamPrioritizationObject","BandwidthSharingObject","LanguageListObject","MetadataObject","MetadataLibraryObject","IndexParametersObject","MediaObjectIndexParametersObject","TimecodeIndexParametersObject","CompatibilityObject","AdvancedContentEncryptionObject","JFIF_Media","ASF_Index_Placeholder_Object","parseUnicodeAttr","uint8Array","attributeParsers","parseByteArrayAttr","buf","parseWordAttr","get","DataType","AsfContentParseError","TopLevelHeaderObjectToken","len","off","objectSize","numberOfHeaderObjects","HeaderObjectToken","State","header","postProcessTag","tags","name","valueType","data","push","id","value","WmPictureToken","fromBuffer","parseAttr","IgnoreObjectState","fileId","fileSize","creationDate","dataPacketsCount","playDuration","sendDuration","preroll","flags","broadcast","seekable","minimumDataPacketSize","maximumDataPacketSize","maximumBitrate","streamType","errorCorrectionType","reserved1","reserved2","extensionDataSize","CodecListObjectHeader","entryCount","async","readString","tokenizer","length","readNumber","readToken","replace","readCodecEntries","codecHeader","entries","i","readCodecEntry","readInformation","readBuffer","type","videoCodec","audioCodec","codecName","description","information","ContentDescriptionObjectState","pos","contentDescTags","tagName","end","ExtendedContentDescriptionObjectState","attrCount","nameLen","valueLen","ExtendedStreamPropertiesObjectState","startTime","endTime","dataBitrate","getInt32","bufferSize","initialBufferFullness","alternateDataBitrate","alternateBufferSize","alternateInitialBufferFullness","maximumObjectSize","reliableFlag","seekableFlag","resendLiveCleanpointsFlag","streamNumber","getInt16","streamLanguageId","averageTimePerFrame","streamNameCount","payloadExtensionSystems","streamNames","streamPropertiesObject","MetadataObjectState","descriptionRecordsCount","dataType","dataLen","MetadataLibraryObjectState","typeId","getUint8","size","index","format","debug","AsfParser","BasicParser","parse","parseObjectHeader","err","numberOfObjectHeaders","fpo","metadata","setFormat","BigInt","spo","extHeader","parseExtensionObject","addTags","codecs","forEach","codec","addStreamInfo","video","audio","audioCodecs","filter","map","join","ignore","addWarning","Promise","all","addTag","extensionSize","remaining","moTags","mlTags"],"sourceRoot":""}